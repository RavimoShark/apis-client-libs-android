/*
 * Ravimoshark Client API
 * This is an API to interact with Ravimoshark client database. # Introduction This API allow to create, modify and delete addresses and clients. # User Authentication This API does not contain any kind of user validation but It request to have a valid authentication user to interact with it. For more information about user Authentication, please refer to [Ravimoshark User Authentication](https://ravimoshark.com/back/apis/auth/latest). 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: dev@ravimoshark.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.ravimoshark.apis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.ravimoshark.apis.client.model.Addresses;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
/**
 * Client information.
 */
@Schema(description = "Client information.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-10-23T10:35:25.141+02:00[Europe/Paris]")
public class Clients implements Serializable{
  private static final long serialVersionUID = 1L;
  @SerializedName("refClient")
  private String refClient = null;

  @SerializedName("addresses")
  private List<Addresses> addresses = null;

  @SerializedName("addressesId")
  private List<Long> addressesId = null;

  @SerializedName("companyName")
  private String companyName = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("frequency")
  private String frequency = null;

  @SerializedName("group")
  private String group = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("nickname")
  private String nickname = null;

  @SerializedName("sector")
  private String sector = null;

  @SerializedName("state")
  private String state = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("stateGroup")
  private String stateGroup = null;

  @SerializedName("score")
  private String score = null;

  @SerializedName("typeClient")
  private String typeClient = null;

  @SerializedName("vat")
  private String vat = null;

  public Clients refClient(String refClient) {
    this.refClient = refClient;
    return this;
  }

   /**
   * Get refClient
   * @return refClient
  **/
  @Schema(description = "")
  public String getRefClient() {
    return refClient;
  }

  public void setRefClient(String refClient) {
    this.refClient = refClient;
  }

  public Clients addresses(List<Addresses> addresses) {
    this.addresses = addresses;
    return this;
  }

  public Clients addAddressesItem(Addresses addressesItem) {
    if (this.addresses == null) {
      this.addresses = new ArrayList<Addresses>();
    }
    this.addresses.add(addressesItem);
    return this;
  }

   /**
   * Get addresses
   * @return addresses
  **/
  @Schema(description = "")
  public List<Addresses> getAddresses() {
    return addresses;
  }

  public void setAddresses(List<Addresses> addresses) {
    this.addresses = addresses;
  }

  public Clients addressesId(List<Long> addressesId) {
    this.addressesId = addressesId;
    return this;
  }

  public Clients addAddressesIdItem(Long addressesIdItem) {
    if (this.addressesId == null) {
      this.addressesId = new ArrayList<Long>();
    }
    this.addressesId.add(addressesIdItem);
    return this;
  }

   /**
   * Get addressesId
   * @return addressesId
  **/
  @Schema(description = "")
  public List<Long> getAddressesId() {
    return addressesId;
  }

  public void setAddressesId(List<Long> addressesId) {
    this.addressesId = addressesId;
  }

  public Clients companyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

   /**
   * Get companyName
   * @return companyName
  **/
  @Schema(description = "")
  public String getCompanyName() {
    return companyName;
  }

  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }

  public Clients email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @Schema(description = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public Clients frequency(String frequency) {
    this.frequency = frequency;
    return this;
  }

   /**
   * Get frequency
   * @return frequency
  **/
  @Schema(description = "")
  public String getFrequency() {
    return frequency;
  }

  public void setFrequency(String frequency) {
    this.frequency = frequency;
  }

  public Clients group(String group) {
    this.group = group;
    return this;
  }

   /**
   * Get group
   * @return group
  **/
  @Schema(description = "")
  public String getGroup() {
    return group;
  }

  public void setGroup(String group) {
    this.group = group;
  }

  public Clients name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Clients nickname(String nickname) {
    this.nickname = nickname;
    return this;
  }

   /**
   * Get nickname
   * @return nickname
  **/
  @Schema(description = "")
  public String getNickname() {
    return nickname;
  }

  public void setNickname(String nickname) {
    this.nickname = nickname;
  }

  public Clients sector(String sector) {
    this.sector = sector;
    return this;
  }

   /**
   * Get sector
   * @return sector
  **/
  @Schema(description = "")
  public String getSector() {
    return sector;
  }

  public void setSector(String sector) {
    this.sector = sector;
  }

  public Clients state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @Schema(description = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public Clients status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public Clients stateGroup(String stateGroup) {
    this.stateGroup = stateGroup;
    return this;
  }

   /**
   * Get stateGroup
   * @return stateGroup
  **/
  @Schema(description = "")
  public String getStateGroup() {
    return stateGroup;
  }

  public void setStateGroup(String stateGroup) {
    this.stateGroup = stateGroup;
  }

  public Clients score(String score) {
    this.score = score;
    return this;
  }

   /**
   * Get score
   * @return score
  **/
  @Schema(description = "")
  public String getScore() {
    return score;
  }

  public void setScore(String score) {
    this.score = score;
  }

  public Clients typeClient(String typeClient) {
    this.typeClient = typeClient;
    return this;
  }

   /**
   * Get typeClient
   * @return typeClient
  **/
  @Schema(description = "")
  public String getTypeClient() {
    return typeClient;
  }

  public void setTypeClient(String typeClient) {
    this.typeClient = typeClient;
  }

  public Clients vat(String vat) {
    this.vat = vat;
    return this;
  }

   /**
   * Get vat
   * @return vat
  **/
  @Schema(description = "")
  public String getVat() {
    return vat;
  }

  public void setVat(String vat) {
    this.vat = vat;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Clients clients = (Clients) o;
    return Objects.equals(this.refClient, clients.refClient) &&
        Objects.equals(this.addresses, clients.addresses) &&
        Objects.equals(this.addressesId, clients.addressesId) &&
        Objects.equals(this.companyName, clients.companyName) &&
        Objects.equals(this.email, clients.email) &&
        Objects.equals(this.frequency, clients.frequency) &&
        Objects.equals(this.group, clients.group) &&
        Objects.equals(this.name, clients.name) &&
        Objects.equals(this.nickname, clients.nickname) &&
        Objects.equals(this.sector, clients.sector) &&
        Objects.equals(this.state, clients.state) &&
        Objects.equals(this.status, clients.status) &&
        Objects.equals(this.stateGroup, clients.stateGroup) &&
        Objects.equals(this.score, clients.score) &&
        Objects.equals(this.typeClient, clients.typeClient) &&
        Objects.equals(this.vat, clients.vat);
  }

  @Override
  public int hashCode() {
    return Objects.hash(refClient, addresses, addressesId, companyName, email, frequency, group, name, nickname, sector, state, status, stateGroup, score, typeClient, vat);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Clients {\n");
    
    sb.append("    refClient: ").append(toIndentedString(refClient)).append("\n");
    sb.append("    addresses: ").append(toIndentedString(addresses)).append("\n");
    sb.append("    addressesId: ").append(toIndentedString(addressesId)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    frequency: ").append(toIndentedString(frequency)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nickname: ").append(toIndentedString(nickname)).append("\n");
    sb.append("    sector: ").append(toIndentedString(sector)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    stateGroup: ").append(toIndentedString(stateGroup)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    typeClient: ").append(toIndentedString(typeClient)).append("\n");
    sb.append("    vat: ").append(toIndentedString(vat)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
